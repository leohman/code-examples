<?php

// Instructions Task 1 Explain what the code in admin.php does, 
//   line by line, in plain, concise english. 
// Identify as many bugs as you can and why they are bugs.

// Issue # 1:
$username = $_POST['username'];
// Discussion:
// Risky: $_POST['username'] is directly from the login form before sanitation, database lookup
// We want to assign $username AFTER sanitation and database lookup that finds a matching entry

// Issue # 2:
if(!isset($_SESSION['session']["logged_in"])) { 
  header("Location: login.php");
}
// Discussion:
// must first call session_start():
if(!isset($_SESSION)){ session_start(); }
// Then do this:
// Assuming that the database lookup found a match on username and password and set these:
//   $_SESSION['loggedin'] = true;
//   $_SESSION['username'] = $username; 
//   Note: $username is the sanitized version of $_POST['username'] that matched a login table entry
if (isset($_SESSION['loggedin']) && $_SESSION['loggedin'] == true)
  { echo "Welcome, ".$_SESSION['username']."!"; }
else 
  { header("Location: login.php"); }

// Issue # 3:
if (isset($_GET['username'])
{
  $username = filterinput($_POST['username']);
}
// Discussion:
// Looks like an attempt to sanitize the username, after the user was already logged in, so pointless.
// Other errors: If the URL has a username in the querystring of the URL, then sanitize, not the username
// in the URL, but a (possibly) different username assumed to be coming in
// from a form submitted via $_POST, whether or not it exists.

// Issue # 4:
include("http://242.32.23.4/inc/admin.inc.php");
if (isset($_GET['page_id'])) {
  include('inc/inc' . $_GET['page_id'] . '.php');
  include('inc/inc-base.php');
}
// Discussion:
// Unwise and less flexible to hard code a fully qualified URL, instead of relative path: include("inc/admin.inc.php");
// If the code is reused for a new client, the old client could complain about the extra number of hits on their site
// Assumes that this page coming up with http://example.com/admin.php?page_id=something to result in
// inclusion of a page named inc/incsomething.php
// risky, since the querystring is so easy to manipulate into, say 'officersalaries.php' or 'upcomingprojects.php' 

// Issue # 5:
function filterinput($variable)
{
    $variable = str_replace("'", "\'", $variable);
    $variable = str_replace(""", "\"", $variable);
    return $variable;
}
// Discussion:
// Purpose seems to be to insert escape characters in front of single and double quotes
// The syntax error on the second line can be fixed by replacing the enclosing double
// quotes with single quotes, like so:
   $variable = str_replace('"', '\"', $variable);

// Issue # 6:
function getUserContent($username)
{
    $con=mysqli_connect("locahost","dbuser","abc123","my_db");
    $result = mysqli_query($con,"SELECT user_content FROM users where username = ". $username);
    $row = mysqli_fetch_array($result);
    return $row['user_content'];
    mysqli_close($con);
}
// Discussion:
// Unfortunately named table  - misspell it (user instead of users) while trying to delete it, and you have no MySQL anymore
// Performance hit from looking up the table twice: first for authentication, then for greeting
// Combine them and look up everything once, setting usercontent to a session variable
// Errorlisting: 'locahost' should be 'localhost'
// Missing single quotes around username in query, should be:
   $result = mysqli_query($con,"SELECT user_content FROM users where username = '". $username."'");
// Missing second parm "MYSQLI_ASSOC" on mysqli_fetch_array and hard to troubleshoot because not displaying errors:
   $row = mysqli_fetch_array($result, MYSQLI_ASSOC) or die("Trouble: ".mysqli_error($con));
// Useless attempt to close the connection after a return statement, move it to before return
   
echo "<h1>Welcome, ". $username ."</h1>";

echo getUserContent($username);

?>
